/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Task;
import model.TaskStatus;

/**
 *
 * @author thiag
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    
    private LocalDate startDate;
    private LocalDate endDate;
    private List<Task> tasks = new ArrayList();
    private DefaultTableModel model;
    private DateTimeFormatter df = DateTimeFormatter.ofPattern("mm/DD/yyyy");
    
    public Main() {
        initComponents();
        tableTasks.requestFocusInWindow();
        model = (DefaultTableModel) tableTasks.getModel();
    }
    
    private void addRowInTable(Task t){
        model.addRow(new Object[]{
        t.getTask(),
        t.getEndDate(),
        t.getStatus(),
        false});
    }
    
    public boolean validateTask(String task){
        System.out.println("abc: "+task);
        return task.length() != 1; 
    }
    
    public  boolean validateDate(String strDate){
        try{
            endDate = LocalDate.parse(strDate, df);
            return true;
        }catch(DateTimeException e){
            return false;
        }
        
    }
    
    public void updateTaskStatus(){
        LocalDate today = LocalDate.now();
        
        for(int i = 0; i < model.getRowCount(); i++){
            String txtDate = model.getValueAt(i, 1).toString();
            
            try{
                LocalDate taskEndDate = LocalDate.parse(txtDate);
                
                if(taskEndDate.isBefore(today)){
                    model.setValueAt(TaskStatus.PENDING, i, 2);
                }
            }catch(DateTimeException e){
                System.out.println("Error: "+e.getLocalizedMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTask = new javax.swing.JTextField();
        txtEndDate = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTasks = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        txtTask.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTask.setText("Enter Task");
        txtTask.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTaskFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTaskFocusLost(evt);
            }
        });
        txtTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaskActionPerformed(evt);
            }
        });

        txtEndDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEndDate.setText("Enter Date (mm/dd/yyyy)");
        txtEndDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEndDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEndDateFocusLost(evt);
            }
        });

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTask)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtTask, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInsert)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        jLabel1.setText("TO-DO LIST");

        tableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task", "End Time", "Status", "Finish"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTasksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTasks);
        if (tableTasks.getColumnModel().getColumnCount() > 0) {
            tableTasks.getColumnModel().getColumn(0).setMinWidth(250);
            tableTasks.getColumnModel().getColumn(3).setMinWidth(20);
            tableTasks.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaskActionPerformed

    private void txtTaskFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTaskFocusGained
        // TODO add your handling code here:
        if (txtTask.getText().equals("Enter Task")) {
            txtTask.setText("");
            txtTask.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTaskFocusGained

    private void txtTaskFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTaskFocusLost
        // TODO add your handling code here:
        if (txtTask.getText().isEmpty()) {
            txtTask.setForeground(Color.GRAY);
            txtTask.setText("Enter Task");
        }
        System.out.println(txtTask.getText());
    }//GEN-LAST:event_txtTaskFocusLost

    private void txtEndDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEndDateFocusGained
        // TODO add your handling code here:
        if (txtEndDate.getText().equals("Enter Date (mm/dd/yyyy)")) {
            txtEndDate.setText("");
            txtEndDate.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtEndDateFocusGained

    private void txtEndDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEndDateFocusLost
        // TODO add your handling code here:
        if (txtEndDate.getText().isEmpty()) {
            txtEndDate.setForeground(Color.GRAY);
            txtEndDate.setText("Enter Date (mm/dd/yyyy)");
        }
        System.out.println(txtEndDate.getText());
    }//GEN-LAST:event_txtEndDateFocusLost

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        if(!validateDate(txtEndDate.getText())){
            JOptionPane.showMessageDialog(null, "Invalid Date. \nDate must be mm/dd/yyyy format");
            return;
        }
        
        if(!validateTask(txtTask.getText())){
            JOptionPane.showMessageDialog(null, "Enter a task before insert it into the table.");
            return;
        }
        
        Task t = new Task(txtTask.getText(), startDate, endDate);
        tasks.add(t);
        addRowInTable(t);
        
        txtTask.setText("Enter Task");
        txtEndDate.setText("Enter Date (mm/dd/yyyy)");
        
        
        
    }//GEN-LAST:event_btnInsertActionPerformed

    private void tableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTasksMouseClicked
        // TODO add your handling code here:
        int selectedRow = tableTasks.getSelectedRow();
        if(selectedRow != -1){
            Boolean isTaskDone = (Boolean) model.getValueAt(selectedRow, 3);
            System.out.println("Tarefa concluida? "+isTaskDone);        }
    }//GEN-LAST:event_tableTasksMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        updateTaskStatus();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableTasks;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtTask;
    // End of variables declaration//GEN-END:variables
}
